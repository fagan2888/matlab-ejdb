function object_id = save(collection, value, varargin)
%SAVE Save/update specified documents into collection.
%
%    object_id = ejdb.save(collection, value, ...)
%    object_id = ejdb.save(database_id, collection, value, ...)
%    object_ids = ejdb.save(collection, value1, value2, ...)
%
% Samples:
%
%    ejdb.save('foo', struct('foo', 'bar'))
%    ejdb.save('foo', struct('id', '511c72ae7922641d00000000', ...
%                            'foo', 'bar'), ...
%                     struct('foo', 'bar2'), ...)
%    ejdb.save('foo', struct('foo', 'bar'), struct('foo', 'bar2'), ...)
%
% If collection with does not exists it will be created.
% Each document may have unique identifier (OID) stored in the `id` property.
% If a saved doc does not have `id` it will be autogenerated,
%     document struct array will be updated with this `id`
%     and new document record will be stored.
% To identify and update doc it should contains `id` property.
%
% Parameters:
%
%    - `collection` Collection name
%    - `value` A struct to be saved
%
% Returns:
%
%    Cell array of saved object ids.
%
% .. NOTE:: Object id is represented as `_id` property in the database, while in Matlab
%        the field is renamed to `id`. Use `_id` in find().
%
% See also ejdb
  object_id = libejdbmex(mfilename, collection, value, varargin{:});
end
